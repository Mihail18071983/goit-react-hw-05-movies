{"version":3,"file":"static/js/33.75e60ced.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","pages/NotFound/NotFoundPage.jsx","shared/services/fetch-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport { NavLink } from 'react-router-dom';\n\nexport const Main = styled.main`\n  padding: 10px 16px;\n`;\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  gap: 30px;\n  margin-bottom: 20px;\n`;\n\nexport const InfoWrapper = styled.div`\n  max-width: 500px;\n`;\n\nexport const OverviewWrapper = styled.p`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin-bottom: 10px;\n`;\n\nexport const OverviewTitle = styled.span`\n  font-weight: 600;\n  font-size: 18px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin-bottom: 20px;\n  \n`;\n\nexport const GoBack = styled.button`\n  color: #f8f8ff;\n  background-color: #556b2f;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  padding: 5px 10px;\n  margin-bottom: 10px;\n`;\n\nexport const Image = styled.img`\n  width: 200px;\n`;\nexport const MovieTitle = styled.h1`\n  display: flex;\n  gap: 5px;\n  margin-bottom: 5px;\n  font-size: 22px;\n  font-weight: 700;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-weight: 700;\n  color: #800000;\n  &::before {\n    background-color: #800000;\n    display: block;\n    content: '';\n    width: 5px;\n    height: 5px;\n    border: 1px;\n    border-radius: 50%;\n  }\n  &.active {\n    color: #0000cd;\n  }\n`;\n\nexport const MovieInfoText = styled.p`\n  margin-bottom: 10px;\n  font-weight: 600;\n`;\n\nexport const Genres = styled.p`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const GenresTitle = styled.span`\n  font-weight: 600;\n  font-size: 18px;\n`;\n\n\n","import { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport {  Outlet } from 'react-router-dom';\n\nimport { fetchMovieById } from 'shared/services/fetch-api';\nimport NotFoundPage from 'pages/NotFound/NotFoundPage';\n\nimport { Main } from './MovieDetails.styled';\nimport { MovieWrapper } from './MovieDetails.styled';\nimport { Wrapper } from './MovieDetails.styled';\nimport { InfoWrapper } from './MovieDetails.styled';\nimport { OverviewWrapper } from './MovieDetails.styled';\nimport { OverviewTitle } from './MovieDetails.styled';\nimport { GoBack } from './MovieDetails.styled';\nimport { Image } from './MovieDetails.styled';\nimport { MovieTitle } from './MovieDetails.styled'; \nimport { MovieInfoText } from './MovieDetails.styled';\nimport { Genres } from './MovieDetails.styled';\nimport { GenresTitle } from './MovieDetails.styled';\nimport { StyledLink } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    const fetchMovieDetails = async id => {\n      try {\n        const result = await fetchMovieById(id);\n        setMovieInfo(result);\n      } catch ({ response }) {\n        console.log(response.data.message);\n        setError(true);\n      }\n    };\n    fetchMovieDetails(movieId);\n  }, [movieId]);\n\n  const goBack = () => navigate(from);\n\n  return (\n    <Main>\n      <GoBack onClick={goBack}>Go Back</GoBack>\n      {error && <NotFoundPage />}\n      {movieInfo && (\n        <MovieWrapper>\n          <Image\n            src={\n              movieInfo.poster_path\n                ? `https://image.tmdb.org/t/p/w200/${movieInfo.poster_path}`\n                : 'https://via.placeholder.com/200'\n            }\n            alt={movieInfo.tagline}\n          />\n          <InfoWrapper>\n            <MovieTitle>\n              <span>{movieInfo.title}</span>\n              <span>{`(${movieInfo.release_date.slice(0, 4)})`}</span>\n            </MovieTitle>\n            <MovieInfoText>Popularity: {Math.ceil(movieInfo.popularity)}</MovieInfoText>\n            <OverviewWrapper>\n              <OverviewTitle>Overview</OverviewTitle>\n              {movieInfo.overview}\n            </OverviewWrapper>\n            <Genres>\n              <GenresTitle>Genre:</GenresTitle>\n              <span>\n                {movieInfo.genres &&\n                  movieInfo.genres.map(genre => genre.name).join(', ')}\n              </span>\n            </Genres>\n          </InfoWrapper>\n        </MovieWrapper>\n      )}\n\n      <Wrapper>\n        <StyledLink to=\"cast\" state={{ from}}>\n          Cast\n        </StyledLink>\n        <StyledLink to=\"reviews\" state={{ from }}>\n          Reviews\n        </StyledLink>\n      </Wrapper>\n\n      <Outlet />\n    </Main>\n  );\n};\n\nexport default MovieDetails;\n","const NotFoundPage = ()=> {\n    return <h1>Not found page</h1>\n}\n\nexport default NotFoundPage;","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: 'ac91775ba29254b7e75060011bf34a90',\n  },\n});\n\nexport const fetchTrending = async (page) => {\n  const mediaType = 'movie';\n  const timeWindow = 'week';\n  const { data } = await instance.get(\n    `/trending/${mediaType}/${timeWindow}?page=${page}`\n  );\n  return data;\n};\n\nexport const fetchMovies = async (page , query) => {\n  const { data } = await instance.get(`/search/movie?page=${page}&query=${query}`);\n  return data;\n};\n\nexport const fetchGenres = async () => {\n  const { data } = await instance.get(`/genre/movie/list`);\n  console.log('genres', data.genres);\n  return data.genres;\n};\n\nexport const fetchMovieById = async (movieID) => {\n  const { data } = await instance.get(`/movie/${movieID}`);\n  return data;\n};\n\nexport const fetchCredits = async (movieId) => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const fetchReviews = async (movieID) => {\n  const { data } = await instance.get(`/movie/${movieID}/reviews`);\n  return data;\n};\n"],"names":["Main","styled","MovieWrapper","InfoWrapper","OverviewWrapper","OverviewTitle","Wrapper","GoBack","Image","MovieTitle","StyledLink","NavLink","MovieInfoText","Genres","GenresTitle","useState","movieInfo","setMovieInfo","error","setError","movieId","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovieDetails","id","fetchMovieById","result","response","console","log","data","message","onClick","NotFoundPage","src","poster_path","alt","tagline","title","release_date","slice","Math","ceil","popularity","overview","genres","map","genre","name","join","to","instance","axios","baseURL","params","api_key","fetchTrending","page","get","fetchMovies","query","movieID","fetchCredits","fetchReviews"],"sourceRoot":""}