{"version":3,"file":"static/js/821.cacbb226.chunk.js","mappings":"kSAEaA,EAAaC,EAAAA,GAAAA,GAAH,uEAKVC,EAAiBD,EAAAA,GAAAA,GAAF,2D,SCKtBE,EAAiB,WACrB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,kHAEIC,EAAAA,EAAAA,IAAaJ,GAFjB,gBAEdK,EAFc,EAEdA,QACRR,EAAWQ,GAHW,gDAIbC,EAJa,KAIbA,SACTP,GAAS,GACTQ,QAAQC,IAAIF,EAASG,KAAKC,SANJ,yDAAH,qDASvBP,EAAkBH,EACnB,GAAE,CAACA,KAGF,gCACGF,IAAS,SAACa,EAAA,QAAD,IACTf,EAAQgB,QACP,SAACrB,EAAD,UACGK,EAAQiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,yBACE,4BACE,SAACvB,EAAD,UAAkBsB,KAClB,uBAAIC,QAHCF,EADE,OAUf,wCAIP,EAEDpB,EAAeuB,aAAe,GAQ9B,O,2CCvDA,UAJqB,WACjB,OAAO,0CACV,C,yLCAKC,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BAETC,OAAQ,CACNC,QAAS,sCAIAC,EAAa,mCAAG,WAAOC,GAAP,+EACT,QACC,OAFQ,SAGJN,EAASO,IAAT,oBAFL,QAEK,YADJ,OACI,iBACwBD,IAJpB,uBAGnBf,EAHmB,EAGnBA,KAHmB,kBAMpBA,GANoB,2CAAH,sDASbiB,EAAW,mCAAG,WAAOF,EAAOG,GAAd,yFACFT,EAASO,IAAT,6BAAmCD,EAAnC,kBAAiDG,IAD/C,uBACjBlB,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,wDAWXmB,EAAc,mCAAG,WAAOC,GAAP,yFACLX,EAASO,IAAT,iBAAuBI,IADlB,uBACpBpB,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdqB,EAAY,mCAAG,WAAO9B,GAAP,yFACHkB,EAASO,IAAT,iBAAuBzB,EAAvB,aADG,uBAClBS,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZL,EAAY,mCAAG,WAAOyB,GAAP,yFACHX,EAASO,IAAT,iBAAuBI,EAAvB,aADG,uBAClBpB,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,qD","sources":["components/MovieReviewers/MovieRewiewers.styled.js","components/MovieReviewers/MovieRewiewers.jsx","pages/NotFound/NotFoundPage.jsx","shared/services/fetch-api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ReviewList = styled.ul`\ndisplay:flex;\nflex-direction:column;\ngap:15px`;\n\nexport const ReviewAutorName =styled.h2`\nfont-size:18px;\nfont-weight:600;\n`","import PropTypes from 'prop-types';\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport NotFoundPage from 'pages/NotFound/NotFoundPage';\n\nimport { fetchReviews } from 'shared/services/fetch-api';\n\nimport { ReviewList } from './MovieRewiewers.styled';\nimport { ReviewAutorName } from './MovieRewiewers.styled';\n\nconst MovieRewiewers = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const { results } = await fetchReviews(movieId);\n        setReviews(results);\n      } catch ({ response }) {\n        setError(true);\n        console.log(response.data.message);\n      }\n    };\n    fetchMovieReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <NotFoundPage />}\n      {reviews.length ? (\n        <ReviewList>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <div>\n                <ReviewAutorName>{author}</ReviewAutorName>\n                <p>{content}</p>\n              </div>\n            </li>\n          ))}\n        </ReviewList>\n      ) : (\n        <p>No results</p>\n      )}\n    </>\n  );\n};\n\nMovieRewiewers.defaultProps = [];\n\nMovieRewiewers.propTypes = {\n  id: PropTypes.number,\n  autor: PropTypes.string,\n  content:PropTypes.string,\n}\n\nexport default MovieRewiewers;\n","const NotFoundPage = ()=> {\n    return <h1>Not found page</h1>\n}\n\nexport default NotFoundPage;","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: 'ac91775ba29254b7e75060011bf34a90',\n  },\n});\n\nexport const fetchTrending = async (page) => {\n  const mediaType = 'movie';\n  const timeWindow = 'week';\n  const { data } = await instance.get(\n    `/trending/${mediaType}/${timeWindow}?page=${page}`\n  );\n  return data;\n};\n\nexport const fetchMovies = async (page , query) => {\n  const { data } = await instance.get(`/search/movie?page=${page}&query=${query}`);\n  return data;\n};\n\nexport const fetchGenres = async () => {\n  const { data } = await instance.get(`/genre/movie/list`);\n  console.log('genres', data.genres);\n  return data.genres;\n};\n\nexport const fetchMovieById = async (movieID) => {\n  const { data } = await instance.get(`/movie/${movieID}`);\n  return data;\n};\n\nexport const fetchCredits = async (movieId) => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const fetchReviews = async (movieID) => {\n  const { data } = await instance.get(`/movie/${movieID}/reviews`);\n  return data;\n};\n"],"names":["ReviewList","styled","ReviewAutorName","MovieRewiewers","useState","reviews","setReviews","error","setError","movieId","useParams","useEffect","fetchMovieReviews","fetchReviews","results","response","console","log","data","message","NotFoundPage","length","map","id","author","content","defaultProps","instance","axios","baseURL","params","api_key","fetchTrending","page","get","fetchMovies","query","fetchMovieById","movieID","fetchCredits"],"sourceRoot":""}